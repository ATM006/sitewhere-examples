<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:sw="http://www.sitewhere.com/schema/sitewhere/ce/tenant"
	xmlns:global="http://www.sitewhere.com/schema/sitewhere/ce"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
           http://www.sitewhere.com/schema/sitewhere/ce http://www.sitewhere.org/schema/sitewhere/ce/current/sitewhere.xsd
           http://www.sitewhere.com/schema/sitewhere/ce/tenant http://www.sitewhere.org/schema/sitewhere/ce/current/sitewhere-tenant.xsd">
           
	<!-- Load property values for substitution -->
	<context:property-placeholder
		location="file:${catalina.home}/conf/sitewhere/${tenant.id}-tenant.properties"
		ignore-resource-not-found="true"/>
	
	<!-- ######################## -->
	<!-- # TENANT CONFIGURATION # -->
	<!-- ######################## -->
	<sw:tenant-configuration>
	
		<!-- #################### -->
		<!-- # GLOBAL OVERRIDES # -->
		<!-- #################### -->
		<sw:globals>
			<!--  
			<global:groovy-configuration debug="true" verbose="true"/>
			-->
		</sw:globals>
		
		<!-- ########################### -->
		<!-- # DATASTORE CONFIGURATION # -->
		<!-- ########################### -->
		<sw:tenant-datastore>
		
			<!-- Default MongoDB Datastore -->
			<sw:mongo-tenant-datastore useBulkEventInserts="true"
				bulkInsertMaxChunkSize="1000"/>
		
			<!-- Default HBase Datastore -->
			<!--  
			<sw:hbase-tenant-datastore/>
			-->

			<!-- Improves performance by using Hazelcast for distributed caching -->
			<sw:hazelcast-cache/>
			
			<!-- Initializes data model with sample data if datastore is empty -->
			<sw:default-device-model-initializer/>
			<sw:default-asset-model-initializer/>
			<sw:default-schedule-model-initializer/>

		</sw:tenant-datastore>
		
		<!-- ######################## -->
		<!-- # DEVICE COMMUNICATION # -->
		<!-- ######################## -->
		<sw:device-communication>
		
			<!-- Inbound event sources -->
			<sw:event-sources>

				<!-- Event source for Stomp messages over ActiveMQ queue (for air traffic example) -->
				<sw:activemq-event-source sourceId="stomp"
					transportUri="stomp://localhost:2345?trace=true" queueName="SITEWHERE.STOMP"
					numConsumers="10" dataDirectory="${catalina.home}/stompdata">
					<sw:json-event-decoder/>
				</sw:activemq-event-source>

			</sw:event-sources>
		
			<!-- Inbound Processing Strategy -->
			<sw:inbound-processing-strategy>
				<sw:default-inbound-processing-strategy
					numEventProcessorThreads="10" enableMonitoring="false" monitoringIntervalSec="3"/>
			</sw:inbound-processing-strategy>
			
			<!-- Device registration -->
			<sw:registration>
				<sw:default-registration-manager allowNewDevices="true"/>
			</sw:registration>
			
			<!-- Batch operation management -->
			<sw:batch-operations>
				<sw:default-batch-operation-manager
					throttleDelayMs="1000"/>
			</sw:batch-operations>
			
			<!-- Device command routing -->
			<sw:command-routing>
				<sw:specification-mapping-router defaultDestination="default">
					<sw:mapping specification="d2604433-e4eb-419b-97c7-88efe9b2cd41"
						destination="hybrid"/>
					<sw:mapping specification="7dfd6d63-5e8d-4380-be04-fc5c73801dfb"
						destination="hybrid"/>
					<sw:mapping specification="5a95f3f2-96f0-47f9-b98d-f5c081d01948"
						destination="hybrid"/>
				</sw:specification-mapping-router>
			</sw:command-routing>
			
			<!-- Outbound command destinations -->
			<sw:command-destinations>

				<!-- Delivers commands via MQTT -->
				<sw:mqtt-command-destination destinationId="default"
					hostname="localhost" port="1883">
					<sw:protobuf-command-encoder/>
					<sw:hardware-id-topic-extractor commandTopicExpr="SiteWhere/commands/%s"
						systemTopicExpr="SiteWhere/system/%s"/>
				</sw:mqtt-command-destination>

				<!-- Used for devices that expect hybrid protobuf/Java invocations -->
				<sw:mqtt-command-destination destinationId="hybrid"
					hostname="localhost" port="1883">
					<sw:java-protobuf-hybrid-encoder/>
					<sw:hardware-id-topic-extractor commandTopicExpr="SiteWhere/commands/%s"
						systemTopicExpr="SiteWhere/system/%s"/>
				</sw:mqtt-command-destination>

			</sw:command-destinations>

		</sw:device-communication>
		
		<!-- ############################ -->
		<!-- # INBOUND PROCESSING CHAIN # -->
		<!-- ############################ -->
		<sw:inbound-processing-chain>
			
			<!-- Store events -->
			<sw:event-storage-processor/>
			
			<!-- Allow devices to dynamically register -->
			<sw:registration-processor/>
			
			<!-- Allow devices to create streams and send stream data -->
			<sw:device-stream-processor/>

		</sw:inbound-processing-chain>
		
		<!-- ############################# -->
		<!-- # OUTBOUND PROCESSING CHAIN # -->
		<!-- ############################# -->
		<sw:outbound-processing-chain>
		
			<!-- Routes commands for outbound processing -->
			<sw:command-delivery-event-processor/>
			
			<!-- Send outbound device events over Hazelcast -->
			<sw:hazelcast-event-processor/>

		</sw:outbound-processing-chain>
		
		<!-- #################### -->
		<!-- # ASSET MANAGEMENT # -->
		<!-- #################### -->
		<sw:asset-management>

			<!-- Additional asset types for air traffic -->
			<sw:filesystem-device-asset-module filename="airtraffic-devices.xml"
				moduleId="at-devices" moduleName="Air Traffic Devices"/>
			<sw:filesystem-hardware-asset-module filename="airtraffic-planes.xml"
				moduleId="at-planes" moduleName="Air Traffic Planes"/>

		</sw:asset-management>

	</sw:tenant-configuration>

</beans>